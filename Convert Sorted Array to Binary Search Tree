Given an array where elements are sorted in ascending order, convert it to a height balanced BST.
给定一个按升序排列的序列，把它转换为平衡的BST
For this problem, 
a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.
对于这个问题，高平衡的二叉树定义为其中每个节点的两个子树的深度相差不超过1的二叉树。
Example:

Given the sorted array: [-10,-3,0,5,9],

One possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST:

      0
     / \
   -3   9
   /   /
 -10  5
 
#Definition for a binary tree node.
#class TreeNode:
#    def __init__(self, x):
#        self.val = x
#        self.left = None
#        self.right = None

class Solution:
    def sortedArrayToBST(self, nums):
        """
        :type nums: List[int]
        :rtype: TreeNode
        """
        length = len(nums)
        if length == 0:
            return None
        if length == 1:
            return TreeNode(nums[0])
        root = TreeNode(nums[length//2])
        root.left = self.sortedArrayToBST(nums[:length//2])
        root.right = self.sortedArrayToBST(nums[length//2+1])
        return root
        
