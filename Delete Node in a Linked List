Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.
写一个函数来删除在一个单链表中的节点（除了尾部节点），只给该节点的访问权限
Supposed the linked list is 1 -> 2 -> 3 -> 4 and you are given the third node with value 3, 
the linked list should become 1 -> 2 -> 4 after calling your function.
假设链表是1 -> 2 -> 3 -> 4，且给第三个节点赋值3，链表应该在调用后变为1 -> 2 -> 4

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def deleteNode(self, node):
        """
        :type node: ListNode
        :rtype: void Do not return anything, modify node in-place instead.
        """
        node.val = node.next.val
        node.next = node.next.next
