Merge two sorted linked lists and return it as a new list. 
把两个排好序的链表合成一个并返回新的链表
The new list should be made by splicing together the nodes of the first two lists.
新链表应该把前两个链表的节点拼接在一起

Example:例子

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def mergeTwoLists(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        ans = ListNode(0)
        tmp = ans
        if l1 == None and L2 == None:
            return None
        while l1 != None or l2 != None:
            if l1 == None:
                while l2 != None:
                    tmp.val = l2.val
                    l2 = l2.next
                    if l2 == None:
                        break
                    tmp.next = ListNode(0)
                    tmp = tmp.next
                break
            if l2 == None:
            while l1 != None:
                tmp.val = l1.val
                    l1 = l1.next
                    if l1 == None:
                        break
                    tmp.next = ListNode(0)
                    tmp = tmp.next
                break
            if l1.val <= l2.val:
                tmp.val = l1.val
                l1 = l1.next
            else:
                tmp.val = l2.val
                l2 = l2.next
            tmp.next = ListNone(0)
            tmp = tmp.next
        return ans
