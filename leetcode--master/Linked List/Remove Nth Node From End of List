Given a linked list, remove the nth node from the end of list and return its head.
给定一个链表，从列表的最后删除倒数第n个节点并返回它的头部
For example,例如

   Given linked list: 1->2->3->4->5, and n = 2.

   After removing the second node from the end, the linked list becomes 1->2->3->5.
   去除倒数第二个节点，链表变成1->2->3->5
Note:
Given n will always be valid.
给的n会始终是有效值
Try to do this in one pass.

class Solution:
    def removeNthFromEnd(self, head, n):
        """
        :type head: ListNode
        :type n: int
        :rtype: ListNode
        """
        dummy = ListNode(0);dummy.next = head
        p1 = p2 = dummy
        for i in range(n): p1 = p1.next
        while p1.next:
            p1 = p1.next; p2 = p2.next
        p2.next = p2.next.next
        return dummy.next
