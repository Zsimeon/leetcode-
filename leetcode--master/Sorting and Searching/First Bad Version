You are a product manager and currently leading a team to develop a new product. 
你是一个产品经理且带领团队来发展一个新产品
Unfortunately, the latest version of your product fails the quality check. 
Since each version is developed based on the previous version, all the versions after a bad version are also bad.
不幸的是，您的产品的最新版本未通过质量检查。 由于每个版本都是基于以前的版本开发的，因此版本较差的所有版本也都是不好的。
Suppose you have n versions [1, 2, ..., n] and you want to find out the first bad one, which causes all the following ones to be bad.
假设你有n个版本[1,2，...，n]，并且你想找出第一个错误的版本，这会导致下面所有的错误。
You are given an API bool isBadVersion(version) which will return whether version is bad.
Implement a function to find the first bad version. You should minimize the number of calls to the API.
给你一个API布尔isBadVersion（版本），它将返回版本是否坏。 实现一个函数来查找第一个错误版本。 您应该尽量减少对API的调用次数。

# The isBadVersion API is already defined for you.
# @param version, an integer
# @return a bool
# def isBadVersion(version):

class Solution(object):
    def firstBadVersion(self, n):
        """
        :type n: int
        :rtype: int
        """
        left, right = 1, n
        while left <= right:
            mid = (left + right) / 2
            if isBadVersion(mid):
                right = mid - 1
            else:
                left = mid + 1
        return left
