Given an array of integers, every element appears twice except for one. Find that single one.

Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

给定一个整数数组，除了一个元素外，每个元素都会出现两次。 找到那一个。

注意：
你的算法应该具有线性运行时复杂性。 你可以不使用额外的内存实现它吗？

用异或的方法做，遍历数组中的所有数，取他们的异或值。

class Solution:
    def singleNumber(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        ans = 0
        for x in nums:
            ans = ans^x
        return ans

n = [1,1,2,2,3,3,4,5,5,6,6,7,7]
SL = Solution()
a = SL.singleNumber(n)
print(a)

a = 4
