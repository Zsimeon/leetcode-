Given a binary tree, find its maximum depth.
给定一个二叉树，寻找其最大深度。
The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
最大深度是从根节点到最远的那个叶节点的最长路径所经过的节点个数
For example:例如：
Given binary tree [3,9,20,null,null,15,7],
给定二叉树如下
    3
   / \
  9  20
    /  \
   15   7
return its depth = 3.
返回深度为3。

#Definition for a binary tree node.
#class TreeNode:
#    def __init__(self, x):
#        self.val = x
#        self.left = None
#        self.right = None

class Solution:
    def maxdepth(self, root):
        """
        :type root: TreeNode
        :rtype:int 
        """
        if root == None:
            return 0
        return 1 + max(self.maxDepth(root.left),self.maxDepth(root.right))
